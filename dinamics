import matplotlib.pyplot as plt
import math
from scipy.interpolate import RegularGridInterpolator
import numpy as np
from PIL import Image


R = 0.1 * 532 *10**(-9)    #радиус частицы
density = 1.96 * 1000  #плотность
m = 4*R**3/3*density*math.pi
k_ci = 1.33*3.3966*10**-26    # коэфф размерности для силы


# задание силы F от координаты
force = np.random.rand(4, 4)
proj = ''
raz_z = 3000
raz_x = 1000
period = 10
first_koor = 0
table_x = [i.split() for i in open(f'C:/Users/yana5/Documents/Яна/практика/сайт/Force site/waist5.32e-07contrast1.2size0.1/Fx.txt').readlines()]
table_z = [i.split() for i in open(f'C:/Users/yana5/Documents/Яна/практика/сайт/Force site/waist5.32e-07contrast1.2size0.1/Fz.txt').readlines()]

def massive(x, z, proj):
    x1 = int(x*1000000000 // period + raz_x // period) - 1
    z1 = int(z*1000000000 // period + raz_z // period) - 1
    if proj == 'x':
        for i in range(4):
            for j in range(4):
                force[i][j] = table_x[i + x1][j + z1]
    elif proj == 'z':
        for i in range(4):
            for j in range(4):
                force[i][j] = table_z[i + x1][j + z1]

def F(x, z, projection):
    x_arr = [(x * 1000000000 // period * period + first_koor) * 0.000000001 - period * 0.000000001,
             (x * 1000000000 // period * period + first_koor) * 0.000000001,
             (x * 1000000000 // period * period + first_koor) * 0.000000001 + period * 0.000000001,
             (x * 1000000000 // period * period + first_koor) * 0.000000001 + 2 * period * 0.000000001]
    z_arr = [z * 1000000000 // period * period * 0.000000001 - period * 0.000000001,
             z * 1000000000 // period * period * 0.000000001,
             z * 1000000000 // period * period * 0.000000001 + period * 0.000000001,
             z * 1000000000 // period * period * 0.000000001 + 2 * period * 0.000000001]

    massive(x, z, projection)
    interp = RegularGridInterpolator((x_arr, z_arr), force, method='cubic')
    return interp((x, z))*k_ci


# начальные условия
x0 = 10**-9 * 300
v0_x = 0

z0 = 10**-9 * -1100
v0_z = 0

Tmax = 10000
dt = 1 / 1

# velocity-Verle method

x = x0
v_x = v0_x
v2_x = 0
arr_x = [x0]
arr_v_x = [v0_x]

z = z0
v_z = v0_z
v2_z = 0
arr_z = [z0]
arr_v_z = [v0_z]

t = dt
arr_t = [0]
# flags
k=0
c=0
u = 0
while t < 3000 * dt:
    try:
        for _ in range(1):  # частота запоминания x, v с периодичностью...


            v2_x = v_x + dt / 2 * F(x, z, 'x') / m
            v2_z = v_z + dt / 2 * F(x, z, 'z') / m

            x = x + dt * v2_x
            z = z + dt * v2_z

            v_x = v2_x + dt / 2 * F(x, z, 'x') / m
            v_z = v2_z + dt / 2 * F(x, z, 'z') / m

            t += dt
            u += 1

        arr_x.append(x)
        arr_v_x.append(v_x)
        arr_z.append(z)
        arr_v_z.append(v_z)
        arr_t.append(t)
        c += 1
    except:
        break
    k+=1


#plt.figure()
#ax = plt.axes()
fig, ax = plt.subplots()
img = Image.open('C:/Users/yana5/PycharmProjects/pythonProject/pictures/пучок_1.jfif')

ax.plot(arr_x, arr_z)#, 'green')
ax.scatter(x0, z0, color = 'green', label = 'точка старта')     #точка старта
ax.scatter(0, 0, color = 'black')       # начало координат

ax.scatter(x, z, color = 'red')   #конечная точка

plt.imshow(img, cmap='gray', aspect=0.5, alpha=0.7,extent=[-1.5*10**-6, 1.5*10**-6, -4*10**-6, 4*10**-6])
plt.xlabel("x")
plt.ylabel("z")
plt.legend(loc=1)
print(k, x,z)
plt.show()
print(x,z)